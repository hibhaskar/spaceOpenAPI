/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cust.bill.mgmt.api;

import java.io.IOException;
import java.util.List;
import java.util.Optional;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.fasterxml.jackson.databind.ObjectMapper;

import cust.bill.mgmt.dao.model.CustomerBillOnDemand;
import cust.bill.mgmt.dao.model.CustomerBillOnDemandRequest;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.Generated(value = "cust.bill.mgmt.codegen.languages.SpringCodegen", date = "2018-09-29T16:06:28.483+05:30")

@Api(value = "customerBillOnDemand", description = "the customerBillOnDemand API")
public interface CustomerBillOnDemandApi {

    Logger logger = LoggerFactory.getLogger(CustomerBillOnDemandApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Create a customer bill on demand", nickname = "customerBillOnDemandCreate", notes = "This operation creates a customer bill on demand entity.", response = CustomerBillOnDemand.class, tags={ "CustomerBillOnDemand", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Success", response = CustomerBillOnDemand.class) 
    })
    @RequestMapping(value = "/customerBillOnDemand",
        produces = { "application/json;charset=utf-8" }, 
        consumes = { "application/json;charset=utf-8" },
        method = RequestMethod.POST)
    default ResponseEntity<CustomerBillOnDemand> customerBillOnDemandCreate(
    		@ApiParam(value = "",required=true) @Valid @RequestBody CustomerBillOnDemandRequest customerBillOnDemand) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"customerBill\" : {    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\"  },  \"@type\" : \"@type\",  \"lastUpdate\" : \"lastUpdate\",  \"name\" : \"name\",  \"description\" : \"description\",  \"id\" : \"id\",  \"href\" : \"href\",  \"state\" : { },  \"@schemaLocation\" : \"@schemaLocation\",  \"billingAccount\" : {    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\"  },  \"relatedParty\" : {    \"role\" : \"role\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\"  }}", CustomerBillOnDemand.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                	logger.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
        	logger.warn("ObjectMapper or HttpServletRequest not configured in default CustomerBillOnDemandApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

    @SuppressWarnings("unchecked")
    @ApiOperation(value = "Retrieve customer bill on demand with filter criteria", nickname = "customerBillOnDemandFind", notes = "This operation list customer bill on demand entities. Attribute selection is enabled for all first level attributes. Filtering may be available depending on the compliance level supported by an implementation.", response = CustomerBillOnDemand.class, responseContainer = "List", tags={ "CustomerBillOnDemand", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = CustomerBillOnDemand.class, responseContainer = "List") })
    @RequestMapping(value = "/customerBillOnDemand",
        produces = { "application/json;charset=utf-8" }, 
        consumes = { "application/json;charset=utf-8" },
        method = RequestMethod.GET)
    default ResponseEntity<List<CustomerBillOnDemand>> customerBillOnDemandFind(
    		@ApiParam(value = "Attributes selection") @Valid @RequestParam(value = "fields", required = false) String fields) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("[ {  \"customerBill\" : {    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\"  },  \"@type\" : \"@type\",  \"lastUpdate\" : \"lastUpdate\",  \"name\" : \"name\",  \"description\" : \"description\",  \"id\" : \"id\",  \"href\" : \"href\",  \"state\" : { },  \"@schemaLocation\" : \"@schemaLocation\",  \"billingAccount\" : {    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\"  },  \"relatedParty\" : {    \"role\" : \"role\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\"  }}, {  \"customerBill\" : {    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\"  },  \"@type\" : \"@type\",  \"lastUpdate\" : \"lastUpdate\",  \"name\" : \"name\",  \"description\" : \"description\",  \"id\" : \"id\",  \"href\" : \"href\",  \"state\" : { },  \"@schemaLocation\" : \"@schemaLocation\",  \"billingAccount\" : {    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\"  },  \"relatedParty\" : {    \"role\" : \"role\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\"  }} ]", List.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                	logger.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
        	logger.warn("ObjectMapper or HttpServletRequest not configured in default CustomerBillOnDemandApi interface so no example is generated");
        }
        logger.warn("Why this is coming here");
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Retrieve a customer bill on demand with its id", nickname = "customerBillOnDemandGet", notes = "This operation retrieves a customer bill on demand entity. Attribute selection is enabled for all first level attributes. Filtering on sub-resources may be available depending on the compliance level supported by an implementation.", response = CustomerBillOnDemand.class, tags={ "CustomerBillOnDemand", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = CustomerBillOnDemand.class) })
    @RequestMapping(value = "/customerBillOnDemand/{id}",
        produces = { "application/json;charset=utf-8" }, 
        consumes = { "application/json;charset=utf-8" },
        method = RequestMethod.GET)
    default ResponseEntity<CustomerBillOnDemand> customerBillOnDemandGet(
    		@ApiParam(value = "",required=true) @PathVariable("id") String id,
    		@ApiParam(value = "Attributes selection") @Valid @RequestParam(value = "fields", required = false) String fields) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"customerBill\" : {    \"@type\" : \"@type\",    \"id\" : \"id\",    \"href\" : \"href\"  },  \"@type\" : \"@type\",  \"lastUpdate\" : \"lastUpdate\",  \"name\" : \"name\",  \"description\" : \"description\",  \"id\" : \"id\",  \"href\" : \"href\",  \"state\" : { },  \"@schemaLocation\" : \"@schemaLocation\",  \"billingAccount\" : {    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\"  },  \"relatedParty\" : {    \"role\" : \"role\",    \"@type\" : \"@type\",    \"name\" : \"name\",    \"id\" : \"id\",    \"href\" : \"href\"  }}", CustomerBillOnDemand.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                	logger.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
        	logger.warn("ObjectMapper or HttpServletRequest not configured in default CustomerBillOnDemandApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}